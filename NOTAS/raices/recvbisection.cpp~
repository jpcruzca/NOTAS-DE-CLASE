#include<iostream>
#include<cmath>
using fun = double(double);
double f(double x);
double bisection(double xl, double xu, const double eps, double Nmax, fun f);
int main()
{
  std::cout.precision(16);
  std::cout.setf(std::ios::scientific);
  double xl=12,xu=18,eps=0.000000001,Nmax=100;
  std::cout << bisection(xl,xu,eps,Nmax, f)<< std::endl;
  
}

double f(double x)
{
  return  9.81*68.1/x*(1-exp(-x*10/68.1)) - 40;
}

double bisection(double xl, double xu, double eps, double Nmax,fun f )
{
  double xr;
  for (int i=0; i<Nmax; i++)
    {
      xr=0.5*(xu+xl);g
      if(f(xl)*f(xr) > 0)
	xl=xr;
      else
	xu=xr;
      if(std::fabs(f(xr)) < eps) break;
      else
	return bisection(xl,xu,eps,Nmax,f)
    }

return xr;
}
